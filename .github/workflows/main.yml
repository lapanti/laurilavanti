name: pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    name: Build
    env:
      CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
      CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: "package-lock.json"
      - name: Install dependencies
        run: npm ci
      - name: build it
        run: npm run build
      - uses: actions/upload-artifact@v4
        with:
          name: build-folder
          path: public

  lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: "package-lock.json"
      - name: Install dependencies
        run: npm ci
      - name: Lint code
        run: npm run lint

  typecheck:
    runs-on: ubuntu-latest
    name: Typecheck
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: "package-lock.json"
      - name: Install dependencies
        run: npm ci
      - name: Check types
        run: npm run typecheck

  knip:
    runs-on: ubuntu-latest
    name: Knip
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: "package-lock.json"
      - name: Install dependencies
        run: npm ci
      - name: knip code
        run: npm run knip

  test-and-sonarcloud:
    runs-on: ubuntu-latest
    needs: [build, lint, typecheck]
    name: Unit tests and SonarCloud analysis
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: "package-lock.json"
      - name: Install dependencies
        run: npm ci
      - name: Run unit tests
        run: npm run test:ci
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  
  deploy:
    runs-on: ubuntu-latest
    needs: [build, lint, typecheck]
    name: Deploy
    permissions:
      contents: read
      deployments: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: build-folder
          path: public
      - id: deploy
        name: Deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          command: pages deploy public --project-name=laurilavanti
    outputs:
      pages-deployment-alias-url: ${{ steps.deploy.outputs.pages-deployment-alias-url }}

  lighthouse:
    runs-on: ubuntu-latest
    needs: [deploy]
    name: Lighthouse
    env:
      CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
      CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
      LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: "package-lock.json"
      - name: Install dependencies
        run: npm ci
      - name: run Lighthouse CI
        env: 
          LHCI_URL: ${{ needs.deploy.outputs.pages-deployment-alias-url }}
        run: |
          npm install -g @lhci/cli@0.14.x
          lhci autorun

  test-e2e:
    runs-on: ubuntu-latest
    needs: [deploy]
    name: E2E tests
    env:
      CONTENTFUL_SPACE_ID: ${{ secrets.CONTENTFUL_SPACE_ID }}
      CONTENTFUL_ACCESS_TOKEN: ${{ secrets.CONTENTFUL_ACCESS_TOKEN }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: ".nvmrc"
          cache: "npm"
          cache-dependency-path: "package-lock.json"
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        env: 
          E2E_URL: ${{ needs.deploy.outputs.pages-deployment-alias-url }}
        run: npm run test:e2e
        timeout-minutes: 30
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30
